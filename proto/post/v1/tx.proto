syntax = "proto3";
package post.v1;

import "cosmos/msg/v1/msg.proto";
import "post/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";
import "post/v1/post.proto";

option go_package = "github.com/rollchains/tlock/x/post/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a governance operation for updating the parameters.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // SetServiceName allows a user to set their accounts name.
  rpc SetServiceName(MsgSetServiceName) returns (MsgSetServiceNameResponse);

  rpc GrantAllowanceFromModule(MsgGrantAllowanceFromModuleRequest) returns (MsgGrantAllowanceFromModuleResponse);

  // CreateFreePostWithTitle allows user to create a free post with title
  rpc CreateFreePostWithTitle(MsgCreateFreePostWithTitle) returns (MsgCreateFreePostWithTitleResponse);

  // CreateFreePost allows user to create a free post without title
  rpc CreateFreePost(MsgCreateFreePost) returns (MsgCreateFreePostResponse);

  rpc CreateFreePostImagePayable(MsgCreateFreePostImagePayable) returns (MsgCreateFreePostImagePayableResponse);

  // CreatePaidPost allows user to create a paid post without title
  rpc CreatePaidPost(MsgCreatePaidPost) returns (MsgCreatePaidPostResponse);

  rpc QuotePost(MsgQuotePostRequest) returns (MsgQuotePostResponse);

  rpc Repost(MsgRepostRequest) returns (MsgRepostResponse);

  rpc Like(MsgLikeRequest) returns (MsgLikeResponse);

  rpc Unlike(MsgUnlikeRequest) returns (MsgUnlikeResponse);

  rpc SavePost(MsgSaveRequest) returns (MsgSaveResponse);

  rpc UnsavePost(MsgUnsaveRequest) returns (MsgUnsaveResponse);

  rpc Comment(MsgCommentRequest) returns (MsgCommentResponse);

  rpc CastVoteOnPoll(CastVoteOnPollRequest) returns (CastVoteOnPollResponse);

  rpc AddCategory(AddCategoryRequest) returns (AddCategoryResponse);

  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);

  //  rpc Mention(MsgMentionRequest) returns (MsgMentionResponse);

}

// MsgSetServiceName defines the structure for setting a name.
message MsgSetServiceName {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string name = 2;
}

// MsgSetServiceNameResponse is an empty reply.
message MsgSetServiceNameResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

message MsgGrantAllowanceFromModuleRequest {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string userAddress = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgGrantAllowanceFromModuleResponse {
  bool status = 1;
}

message MsgCreateFreePostWithTitle {
  option (cosmos.msg.v1.signer) = "creator";
  string postId = 1;
  PostType postType = 2;
  string title = 3;
  string content = 4;
  string creator = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated bytes imagesBase64 = 6;
  repeated string imagesUrl = 7;
  repeated string videosUrl = 8;
  string quote = 9;
  repeated string mention = 10;
  repeated string topic = 11;
  string category = 12;
  Poll poll = 13;
}

message MsgCreateFreePostWithTitleResponse {
  string post_id = 1;
}

message MsgCreateFreePost {
  option (cosmos.msg.v1.signer) = "creator";
  string postId = 1;
  PostType postType = 2;
  string title = 3;
  string content = 4;
  string creator = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated bytes imagesBase64 = 6;
  repeated string imagesUrl = 7;
  repeated string videosUrl = 8;
  string quote = 9;
  repeated string mention = 10;
  repeated string topic = 11;
  string category = 12;
  Poll poll = 13;
}

message MsgCreateFreePostResponse {
  string post_id = 1;
}

message MsgCreateFreePostImagePayable {
  option (cosmos.msg.v1.signer) = "creator";
  string postId = 1;
  PostType postType = 2;
  string title = 3;
  string content = 4;
  string creator = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated bytes imagesBase64 = 6;
  repeated string imagesUrl = 7;
  repeated string videosUrl = 8;
  string quote = 9;
  repeated string mention = 10;
  repeated string topic = 11;
  string category = 12;
}

message MsgCreateFreePostImagePayableResponse {
  string post_id = 1;
}

message MsgCreatePaidPost {
  option (cosmos.msg.v1.signer) = "creator";
  string postId = 1;
  PostType postType = 2;
  string title = 3;
  string content = 4;
  string creator = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated bytes imagesBase64 = 6;
  repeated string imagesUrl = 7;
  repeated string videosUrl = 8;
  string quote = 9;
  repeated string mention = 10;
  repeated string topic = 11;
  string category = 12;
}

message MsgCreatePaidPostResponse {
  string post_id = 1;
}

message MsgQuotePostRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string quote = 2;
  string comment = 3;
  repeated string mention = 4;
  repeated string topic = 5;
  string category = 6;
}

message MsgQuotePostResponse {
  bool status = 1;
}

message MsgRepostRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string quote = 2;
  repeated string mention = 3;
  repeated string topic = 4;
  string category = 5;
}

message MsgRepostResponse {
  bool status = 1;
}

message MsgLikeRequest {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string id = 2;
}

message MsgLikeResponse {
  bool status = 1;
}

message MsgUnlikeRequest {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string id = 2;
}

message MsgUnlikeResponse {
  bool status = 1;
}

message MsgSaveRequest {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string id = 2;
}

message MsgSaveResponse {
  bool status = 1;
}

message MsgUnsaveRequest {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string id = 2;
}

message MsgUnsaveResponse {
  bool status = 1;
}

message MsgCommentRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string parentId = 2;
  string comment = 3;
  repeated string mention = 4;
}

message MsgCommentResponse {
  bool status = 1;
}

message MentionJson {
  string id = 1;
  repeated string mentioned_address = 2;
}

message CastVoteOnPollRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string id = 2;
  int64 optionId = 3;
}

message CastVoteOnPollResponse {
  bool status = 1;
}

message CategoryParams {
  string name = 1;
  string avatar = 2;
  uint64 index = 3;
}
message AddCategoryRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  CategoryParams params = 2;
}

message AddCategoryResponse {
  bool status = 1;
}
message DeleteCategoryRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string id = 2;
}

message DeleteCategoryResponse {
  bool status = 1;
}

message MsgMentionRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  MentionJson mention_json = 2;
}

message MsgMentionResponse {

}
