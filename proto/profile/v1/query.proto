syntax = "proto3";
package profile.v1;

import "google/api/annotations.proto";
import "profile/v1/genesis.proto";
import "profile/v1/profile.proto";
import "profile/v1/userSearch.proto";

option go_package = "github.com/rollchains/tlock/x/profile/types";

// Query provides defines the gRPC querier service.
service Query {
  // Params queries all parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/profile/v1/params";
  }

  rpc QueryProfile(QueryProfileRequest) returns (QueryProfileResponse) {
    option (google.api.http).get = "/profile/v1/get/{wallet_address}";
  }

  rpc QueryIsFollowing(QueryIsFollowingRequest) returns (QueryIsFollowingResponse) {
    option (google.api.http).get = "/profile/v1/isFlowing/{user}/{target}";
  };
  rpc QueryFollowing(QueryFollowingRequest) returns (QueryFollowingResponse) {
    option (google.api.http).get = "/profile/v1/flowing/{wallet_address}";
  };
  rpc QueryFollowers(QueryFollowersRequest) returns (QueryFollowersResponse) {
    option (google.api.http).get = "/profile/v1/flowers/{wallet_address}";
  };

//  rpc QueryActivitiesReceived(QueryActivitiesReceivedRequest) returns (QueryActivitiesReceivedResponse) {
//    option (google.api.http).get = "/profile/v1/activites/received/{wallet_address}";
//  };
  rpc QueryActivitiesReceivedCount(QueryActivitiesReceivedCountRequest) returns (QueryActivitiesReceivedCountResponse) {
    option (google.api.http).get = "/profile/v1/activites/received/count/{wallet_address}";
  };

  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse) {
    option (google.api.http).get = "/profile/v1/users/search/{matching}";
  };
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1;
}

message QueryProfileRequest {
  string wallet_address = 1;
}

message QueryProfileResponse {
  Profile profile = 1;
}

message QueryIsFollowingRequest {
  string user = 1;
  string target = 2;
}

message QueryIsFollowingResponse {
  bool isFollowing = 1;
}

message QueryFollowingRequest {
  string wallet_address = 1;
}

message QueryFollowingResponse {
  repeated Profile Profiles = 1;
}

message QueryFollowersRequest {
  string wallet_address = 1;
}

message QueryFollowersResponse {
  repeated Profile Profiles = 1;
}

message QueryActivitiesReceivedCountRequest {
  string wallet_address = 1;
}

message QueryActivitiesReceivedCountResponse {
  uint64 count = 1;
}

//message QueryHasUserHandleRequest {
//  string userHandle = 1;
//}
//
//message QueryHasUserHandleResponse {
//  string address = 1;
//}

message SearchUsersRequest {
  string matching = 1;
}

message SearchUsersResponse {
  repeated UserSearch users = 1;
}
